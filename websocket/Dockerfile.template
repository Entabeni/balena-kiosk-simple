FROM balenalib/%%BALENA_MACHINE_NAME%%-node:8-stretch-build AS build

# Defines our working directory in container
WORKDIR /usr/src/app
RUN install_packages \
    libbluetooth-dev \
    libcups2-dev \
    libcupsimage2-dev \
    python build-essential libusb-1.0-0-dev \
    libudev-dev \
    python build-essential libusb-1.0-0-dev 



COPY package.json package.json

RUN JOBS=MAX npm install --production --unsafe-perm && npm cache verify

FROM balenalib/%%BALENA_MACHINE_NAME%%-node:8-stretch

WORKDIR /usr/src/app
RUN apt-get update && apt-get install -y --no-install-recommends apt-utils && rm -rf /var/lib/apt/lists/*

RUN install_packages \
    libbluetooth-dev \
    libcups2-dev \
    cups \
    libcupsimage2-dev \
    nano \
    wget \
    unzip \
    redis-server \
    dbus \
    udev \
    libudev-dev \
    python build-essential libusb-1.0-0-dev 

COPY --from=build /usr/src/app/node_modules /usr/src/app/node_modules
COPY ./build ./build
COPY ./logos ./logos
ENV UDEV=on
COPY udev/symlink.rules /etc/udev/rules.d/symlink.rules
COPY start.sh ./
COPY kevin.pdf kevin.pdf
ENV FRONTEND_URL 'pos-demo.entabeni.tech'
ENV WEBSOCKET_URL 'wss://entabeni-api-staging.herokuapp.com/cable'
ENV IS_PRODUCTION '0'
ENV PRINT_TERMINAL_ID 'f8ea744a-d959-4ae4-b3f8-4711cced2020'
ENV TERMINAL_PASSWORD '973595bf280d548eb8455d4f2d131561'
RUN npm install pm2 -g --no-optional
RUN npm install pm2-logrotate -g --no-optional
COPY package.json package.json
CMD ["bash", "start.sh"]
